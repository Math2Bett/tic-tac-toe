{"version":3,"sources":["components/ChoiceButton.js","components/InitialGameState.js","components/Loading.js","components/Error.js","components/InputForm.js","socket.js","containers/Home.js","components/icons/X.js","components/icons/O.js","components/icons/index.js","components/Square.js","components/Wait.js","components/Status.js","components/PlayAgain.js","components/Score/Score.js","components/Score/ScoreBoard.js","containers/Game.js","AppRouter.js","index.js"],"names":["ChoiceButton","type","label","onClick","className","InitialGameState","onChoice","Loading","loading","style","display","userSelect","Error","message","opacity","InputForm","stepBack","onSubmit","onTyping","newGame","name","room","placeholder","onChange","value","socket","getSocket","socketIOClient","Home","React","useState","step","setStep","setName","setNewGame","setRoom","setLoading","serverConfirmed","setServerConfirmed","error","setError","errorMessage","setErrorMessage","onInitialGameStateButtonClicked","choice","onUserWritingSomething","event","target","displayError","setTimeout","onUserSubmitHisForm","emit","console","log","emitJoiningEvent","useEffect","on","to","getHomeByGameState","beforeStyle","background","width","height","position","transform","afterStyle","X","borderRadius","O","Icon","props","end","turn","player","Square","bind","id","Wait","textArea","useRef","ref","readOnly","current","select","document","execCommand","Status","PlayAgain","visibility","Score","score","ScoreBoard","data","player1","player2","Game","handleClick","index","state","game","piece","playAgainRequest","Array","fill","statusMessage","currentPlayerScore","opponentPlayer","waiting","joinError","socketID","this","io","qs","parse","window","location","search","ignoreQueryPrefix","setState","gameState","players","gameStart","handleUpdate","handleWin","handleDraw","handleRestart","opponent","filter","setBoard","setTurn","setMessage","playerScore","opponentScore","i","squareArray","newSquare","renderSquare","push","Component","AppRouter","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ecaf181e.chunk.js","sourcesContent":["import React from 'react';\n\nconst ChoiceButton = ({type, label, onClick}) => {\n    return (\n        <button className={`btn btn-${type}`} onClick={onClick}>{label}</button>\n    );\n}\n\nexport default ChoiceButton;\n","import React from 'react';\nimport ChoiceButton from './ChoiceButton'\n\nconst InitialGameState = ({onChoice}) => {\n    return (\n        <>\n        <div className='choice-container'>\n            <ChoiceButton onClick={() => onChoice('new')} type='primary' label='Start New Game'/> \n            <ChoiceButton onClick={() => onChoice('join')} type='secondary' label='Join A Game'/> \n        </div>\n        </>\n    );\n}\n\nexport default InitialGameState;\n","import React from 'react';\n\nconst Loading = ({loading}) => {\n    return (\n        <div className=\"loader\" style={{display:loading?'flex':'none'}}>\n            <i className=\"fa fa-spinner fa-pulse fa-4x fa-fw\"></i>\n            <span style={{userSelect: 'none'}}>Loading...</span>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\n\nconst Error = ({display, message}) => {\n    return (\n        <div className=\"error\" style={{opacity:display?'100%':'0'}}>\n            <h1 className=\"error-message\">\n                {message}\n            </h1>\n        </div>\n    );\n}\n\nexport default Error;\n","import React from 'react';\nimport ChoiceButton from './ChoiceButton'\n\nconst InputForm = ({stepBack, onSubmit, onTyping, newGame, name, room}) => {\n    if (newGame){\n        return (\n            <div className=\"input-container\">\n                <input \n                name='name'\n                placeholder='Your Name...'\n                onChange = {onTyping}\n                value = {name}\n                />\n                <div className='nav-container'>\n                    <ChoiceButton type='nav-back' onClick={stepBack} label='Back'/>\n                    <ChoiceButton type='nav-forward' onClick={onSubmit} label=\"Let's Go\"/>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"input-container\">\n                <input \n                name='name'\n                placeholder='Your Name...'\n                onChange = {onTyping}\n                value = {name}\n                />\n                <input \n                name='room'\n                placeholder='Room ID...'\n                onChange = {onTyping}\n                value = {room}\n                />\n                <div className='nav-container'>\n                    <ChoiceButton type='nav-back' onClick={stepBack} label='Back'/>\n                    <ChoiceButton type='nav-forward' onClick={onSubmit} label=\"Let's Go\"/>\n                    \n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default InputForm;\n","import socketIOClient from 'socket.io-client'\nconst ENDPOINT = 'ws://localhost:4000';\n\nlet socket = null;\n\nexport const initializeSocketConection = () => {\n    return getSocket();\n};\nexport const getSocket = () => {\n    if (socket) {\n        return socket;\n    }\n    socket = socketIOClient(ENDPOINT);\n    return socket;\n};\nexport const disconnectSocket = () => {\n    socket.disconnect();\n};\nexport const emitNewGameEvent = () => {\n    socket.emit('newGame');\n};\n\nexport const emitJoiningEvent = (room) => {\n    socket.emit('joining', { room })\n};","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport InitialGameState from '../components/InitialGameState';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\nimport InputForm from '../components/InputForm';\nimport { initializeSocketConection, disconnectSocket, emitJoiningEvent, emitNewGameEvent} from '../socket';\n\nconst Home = () => {\n    const [step, setStep] = React.useState(1);\n    const [name, setName] = React.useState('');\n    const [newGame, setNewGame] = React.useState(null);\n    const [room, setRoom] = React.useState('');\n    const [loading, setLoading] = React.useState(false);\n    const [serverConfirmed, setServerConfirmed] = React.useState(false);\n    const [error, setError] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState('');\n    const stepBack = () => {\n        setStep(step - 1);\n    }\n    const stepForward = () => {\n        setStep(step + 1);\n    }\n    const onInitialGameStateButtonClicked = (choice) => {\n        const gameChoice = choice === 'new' ? true : false;\n        setNewGame(gameChoice);\n        stepForward();\n    };\n    const onUserWritingSomething = (event) => {\n        const target = event.target.name;\n        const value = event.target.value;\n        if (target === 'name') {\n            setName(value);\n        } else if (target === 'room') {\n            setRoom(value);\n        }\n    }\n    const isMyFormValid = () => {\n        if (newGame) {\n            return name !== '';\n        } else { \n            return name !== '' && room !== '';\n        }\n    }\n\n    const displayError = (message) => {\n        setError(true);\n        setErrorMessage(message);\n        setLoading(false);\n        setTimeout(() => {\n            setError(false);\n            setErrorMessage('');\n        }, 3000)\n    }\n\n    const onUserSubmitHisForm = () => {\n        setLoading(true);\n        if (isMyFormValid()) {\n             if (newGame) {\n        emitNewGameEvent();\n        console.log('Je demande à appeler le serveur pour créer une nouvelle partie !');\n    } else {\n        console.log('Je demande à appeler le serveur pour rejoindre une nouvelle partie !');\n        emitJoiningEvent(room);\n    }\n        } else {\n            displayError(newGame ? 'Please fill out your name' : 'Please fill out your name and room id')\n        }\n    }\n    React.useEffect(() => {\n        let socket = initializeSocketConection();\n        socket.on('newGameCreated', (room) => {\n            setRoom(room);\n            setServerConfirmed(true);\n        })\n        socket.on('joinConfirmed', () => {\n            setServerConfirmed(true); \n        })\n        socket.on('errorMessage', (message) => displayError(message));\n        return () => {socket = null};\n    }, []);\n    const getHomeByGameState = () => {\n        if (serverConfirmed) {\n            return (\n                <Redirect to={`/game?room=${room}&name=${name}`} />\n            )\n        } else {\n            switch (step) {\n                case (1):\n                    return (\n                        <InitialGameState onChoice={onInitialGameStateButtonClicked} />\n                    );\n                default:\n                    return null\n                    case(2):\n                    return (\n                        <>\n                            <Loading loading={loading}/>\n                            <Error display={error} message={errorMessage}/>\n                            <InputForm \n                                stepBack={stepBack} \n                                onSubmit={onUserSubmitHisForm}\n                                onTyping={onUserWritingSomething}\n                                newGame={newGame}\n                                name = {name}\n                                room = {room}/> \n                        </>\n                    );\n            }\n        }\n    };\n\n    return getHomeByGameState();\n}\nexport default Home;","import React from 'react';\n\nconst beforeStyle ={\n    background: 'white',\n    width: '93%',\n    height: '13%',\n    position: 'absolute',\n    transform: 'rotate(45deg)'\n}\nconst afterStyle ={\n    background: 'white',\n    width: '93%',\n    height: '13%',\n    position: 'absolute',\n    transform: 'rotate(-45deg)'\n}\n\n\nconst X = () => {\n    return (\n        <>\n            <div className=\"before\" style={beforeStyle}></div>\n            <div className = \"after\" style={afterStyle}></div>\n        </>\n    );\n}\n\nexport default X;\n","import React from 'react';\n\nconst beforeStyle ={\n    background: 'white',\n    width: '90%',\n    height: '90%',\n    position: 'absolute',\n    borderRadius: '50%',\n}\nconst afterStyle ={\n    background: 'var(--dark-blue)',\n    width: '70%',\n    height: '70%',\n    position: 'absolute',\n    borderRadius: '50%',\n}\n\n\nconst O = () => {\n    return (\n        <>\n            <div className=\"before\" style={beforeStyle}></div>\n            <div className = \"after\" style={afterStyle}></div>\n        </>\n    );\n}\n\nexport default O;\n","import React from 'react';\nimport X from './X'\nimport O from './O'\n\nconst Icon = (props) => {\n    switch(props.value){\n        case 'X':\n            return <X />\n        case 'O':\n            return <O />\n        default:\n            if (props.end || !props.turn){\n                return <div></div>\n            }else{\n                switch(props.player){\n                    case 'X':\n                        return <div className='placeHolder'><X /></div>\n                    case 'O':\n                        return <div className='placeHolder'><O /></div>\n                    default:\n                        return <div></div>\n                }   \n            }\n    }\n}\n\nexport default Icon;","import React from 'react';\nimport Icon from './icons/index'\n\nconst Square = (props) => {\n  return (\n    <div className=\"square\" onClick={props.onClick.bind(this, props.id)}>\n      <Icon {...props}/> \n    </div>\n  );\n}\n\nexport default Square;","import React, { useRef } from 'react';\n\nconst Wait = ({ room, display }) => {\n    const textArea = useRef(null)\n    const onClick = () => {\n        textArea.current.select()\n        document.execCommand('copy')\n    }\n\n    return (\n        <div className='wait' style={{ display: display ? 'flex' : 'none' }}>\n            <h1 className=\"wait-message\">Waiting for player to connect...</h1>\n            <div className=\"copy\">\n                <h1 className='copy-message'>Give your friend the following room id to connect</h1>\n                <div className='copy-container'>\n                    <input ref={textArea} readOnly={true} value={room} className='copy-area' />\n                    <button className='copy-button' onClick={onClick}>Copy</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Wait;\n","import React from 'react'\n\nexport default function Status({ message }) {\n    return (\n        <div className='status'>\n            <h1 className=\"status-message\">{message}</h1>\n        </div>\n    )\n};\n","import React from 'react'\n\nexport default function PlayAgain({ end, onClick }) {\n    return (\n        <div className='again-container'>\n            <button className='again-button' onClick={onClick} style={{ visibility: end ? 'visible' : 'hidden', opacity: end ? '1' : '0' }}>Play Again</button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Score({ name, score }) {\n    return (\n        <div className='score-container'>\n            <h1 className=\"name\">{name}</h1>\n            <h1 className=\"score\">{score}</h1>\n        </div>\n    )\n};\n","import React from 'react'\nimport Score from './Score'\n\nexport default function ScoreBoard({ data }) {\n    return (\n        <div className='score-board'>\n            <h1 className=\"score-title\">Score Board</h1>\n            <Score\n                name={data.player1[0]}\n                score={data.player1[1]}/>\n            <Score \n                name={data.player2[0]}\n                score={data.player2[1]}/>\n        </div>\n    )\n};\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Square from '../components/Square';\nimport Wait from '../components/Wait'\nimport Status from '../components/Status'\nimport PlayAgain from '../components/PlayAgain'\nimport io from 'socket.io-client'\nimport qs from 'qs'\nimport ScoreBoard from '../components/Score/ScoreBoard'\nconst ENDPOINT = 'ws://localhost:4000'\n\nclass Game extends Component {\n   constructor(props) {\n       super(props)\n       this.state = {\n           game: new Array(9).fill(null),\n           piece: 'X',\n           turn: true,\n           end: false,\n           room: '',\n           statusMessage: '',\n           currentPlayerScore: 0,\n           opponentPlayer: [],\n           waiting: false,\n           joinError: false\n       }\n       this.socketID = null\n   }\n\n   componentDidMount() {\n       this.socket = io(ENDPOINT)\n       const { room, name } = qs.parse(window.location.search, {\n           ignoreQueryPrefix: true\n       })\n       this.setState({ room })\n       this.socket.emit('newRoomJoin', { room, name })\n\n       this.socket.on('waiting', () => this.setState({ waiting: true, currentPlayerScore: 0, opponentPlayer: [] }))\n       this.socket.on('starting', ({ gameState, players, turn }) => {\n           this.setState({ waiting: false })\n           this.gameStart(gameState, players, turn)\n       })\n       this.socket.on('joinError', () => this.setState({ joinError: true }))\n\n       this.socket.on('pieceAssignment', ({ piece, id }) => {\n           this.setState({ piece: piece })\n           this.socketID = id\n       })\n\n       this.socket.on('update', ({ gameState, turn }) => this.handleUpdate(gameState, turn))\n       this.socket.on('winner', ({ gameState, id }) => this.handleWin(id, gameState))\n       this.socket.on('draw', ({ gameState }) => this.handleDraw(gameState))\n\n       this.socket.on('restart', ({ gameState, turn }) => this.handleRestart(gameState, turn))\n   }\n\n   gameStart(gameState, players, turn) {\n       const opponent = players.filter(([id, name]) => id !== this.socketID)[0][1]\n       this.setState({ opponentPlayer: [opponent, 0], end: false })\n       this.setBoard(gameState)\n       this.setTurn(turn)\n       this.setMessage()\n   }\n\n   handleClick = (index) => {\n       const { game, piece, end, turn, room } = this.state\n       if (!game[index] && !end && turn) {\n           this.socket.emit('move', { room, piece, index })\n       }\n   }\n\n   handleUpdate(gameState, turn) {\n       this.setBoard(gameState)\n       this.setTurn(turn)\n       this.setMessage()\n   }\n\n   handleWin(id, gameState) {\n       this.setBoard(gameState)\n       if (this.socketID === id) {\n           const playerScore = this.state.currentPlayerScore + 1\n           this.setState({ currentPlayerScore: playerScore, statusMessage: 'You Win' })\n       } else {\n           const opponentScore = this.state.opponentPlayer[1] + 1\n           const opponent = this.state.opponentPlayer\n           opponent[1] = opponentScore\n           this.setState({ opponentPlayer: opponent, statusMessage: `${this.state.opponentPlayer[0]} Wins` })\n       }\n       this.setState({ end: true })\n   }\n\n   handleDraw(gameState) {\n       this.setBoard(gameState)\n       this.setState({ end: true, statusMessage: 'Draw' })\n   }\n\n   playAgainRequest = () => {\n       this.socket.emit('playAgainRequest', this.state.room)\n   }\n\n   handleRestart(gameState, turn) {\n       this.setBoard(gameState)\n       this.setTurn(turn)\n       this.setMessage()\n       this.setState({ end: false })\n   }\n\n\n   setMessage() {\n       const message = this.state.turn ? 'Your Turn' : `${this.state.opponentPlayer[0]}'s Turn`\n       this.setState({ statusMessage: message })\n   }\n\n   setTurn(turn) {\n       if (this.state.piece === turn) {\n           this.setState({ turn: true })\n       } else {\n           this.setState({ turn: false })\n       }\n   }\n\n   setBoard(gameState) {\n       this.setState({ game: gameState })\n   }\n\n   renderSquare(i) {\n       return (\n           <Square key={i} value={this.state.game[i]}\n               player={this.state.piece}\n               end={this.state.end}\n               id={i}\n               onClick={this.handleClick}\n               turn={this.state.turn} />\n       )\n   }\n\n   render() {\n       if (this.state.joinError) {\n           return (\n               <Redirect to={`/`} />\n           )\n       } else {\n           const squareArray = []\n           for (let i = 0; i < 9; i++) {\n               const newSquare = this.renderSquare(i)\n               squareArray.push(newSquare)\n           }\n           return (\n               <>\n                   <Wait display={this.state.waiting} room={this.state.room} />\n                   <Status message={this.state.statusMessage} />\n                   <div className=\"board\">\n                       {squareArray}\n                   </div>\n                   <ScoreBoard data={{player1:['You', this.state.currentPlayerScore], player2: [this.state.opponentPlayer[0], this.state.opponentPlayer[1]]}}/>\n                   <PlayAgain end={this.state.end} onClick={this.playAgainRequest} />\n               </>\n           )\n       }\n   }\n}\n\nexport default Game","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Home from './containers/Home';\nimport Game from './containers/Game';\n\nconst AppRouter = () => (\n    <Router>\n        <Route path='/' exact component={Home} />\n        <Route path='/game' component={Game} />\n    </Router>\n)\n \nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter'\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppRouter />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}